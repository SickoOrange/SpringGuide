<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">


    <!--为成员变量赋null，这里需要用专门的null标签来赋值-->
    <bean id="macbookpro1" class="com.huawei.yinya.xml.ComplexLaptop">
        <property name="name">
            <null/>
        </property>
        <!--使用ref标签引用IOC容器中的master-->
        <property name="master" ref="master">
        </property>
    </bean>


    <bean id="master" class="com.huawei.yinya.xml.Master">
        <property name="name" value="yinya"/>
    </bean>


    <bean id="macbookpro2" class="com.huawei.yinya.xml.ComplexLaptop">
        <property name="name">
            <null/>
        </property>
        <!--使用bean标签创建master master=new Master() 不是单例-->
        <property name="master">
            <bean class="com.huawei.yinya.xml.Master">
                <property name="name" value="yinya"/>
            </bean>
        </property>
    </bean>


    <bean id="user2" class="com.huawei.yinya.xml.Master">
        <property name="name" value="zhuqi"/>
    </bean>
    <!--为list<Master> 赋值-->
    <bean id="macbookpro3" class="com.huawei.yinya.xml.ComplexLaptop">

        <!--使用list标签创建 list =new Arraylist<Master>()-->
        <property name="masters">
            <list>
                <!--使用bean标签窗前一个user-->
                <bean id="user1" class="com.huawei.yinya.xml.Master" p:name="zhouyangkai"/>
                <!--使用ref标签引用一个ioc容器中的user-->
                <ref bean="user2"/>
            </list>
        </property>
    </bean>


    <!--为Map<String,Object> 赋值-->
    <bean id="macbookpro4" class="com.huawei.yinya.xml.ComplexLaptop">
        <!--使用map标签创建 list =new Hashmap<String,Object>()-->
        <property name="map">
            <map>
                <!--value为字符串-->
                <entry key="string" value="master"/>
                <!--value为int-->
                <entry key="int" value="18"/>
                <!--value 是一个IOC容器bean-->
                <entry key="outterBean" value-ref="user2"/>
                <!--value 是一个通过bean标签创建的bean-->
                <entry key="innerBean">
                    <bean class="com.huawei.yinya.xml.Master">
                        <property name="name" value="yinya"/>
                    </bean>
                </entry>
            </map>
        </property>
    </bean>


    <!--为properties属性赋值-->
    <bean id="macbookpro5" class="com.huawei.yinya.xml.ComplexLaptop">
        <!--使用props标签创建 list =new Hashmap<String,Object>()-->
        <property name="properties">
            <props>
                <prop key="hello">value</prop>
                <prop key="nihao">china</prop>
            </props>
        </property>
    </bean>


    <!--为级联属性赋值 所谓的级联属性就是属性的属性，比如Laptop中Master的name-->
    <!--master.name相对于Laptop就是一个级联属性-->
    <bean id="macbookpro6" class="com.huawei.yinya.xml.ComplexLaptop">
        <property name="master" ref="master"/>
        <!--现在master中name由yinya变成了zhouyangkai-->
        <property name="master.name" value="zhouyangkai"/>
    </bean>


    <!--Bean属性的继承-->
    <bean id="laptop" class="com.huawei.yinya.xml.Laptop">
        <property name="name" value="lenovo"/>
        <property name="model" value="2018"/>
        <property name="price" value="5000"/>
    </bean>

    <!--Bean属性的继承 通过parent标签实现-->
    <!--使用parent标签表示当前的laptopcopy中的属性都继承与laotop-->
    <!--但是 laptopcopy跟laptop之间并没有直接的关系，也没有继承关系-->
    <bean id="laptopcopy1" class="com.huawei.yinya.xml.Laptop" parent="laptop">
    </bean>

    <!--通过parent标签继承的属性如果想直接更改，可直接使用property标签-->
    <bean id="laptopcopy2" class="com.huawei.yinya.xml.Laptop" parent="laptop">
        <property name="name" value="razer"/>
    </bean>


    <!--静态工厂配置-->
    <bean id="xiaomi" class="com.huawei.yinya.xml.LaptopStaticFactory" factory-method="createLaotop">
        <constructor-arg value="xiaomi"/>
    </bean>

    <!--实例工厂配置-->
    <bean id="instanceFactory" class="com.huawei.yinya.xml.LaptopInstanceFactory"/>
    <bean id="huawei" class="com.huawei.yinya.xml.Laptop" factory-bean="instanceFactory" factory-method="createLaotop">
        <constructor-arg value="huawei"/>
    </bean>

    <!--FactoryBean工厂配置-->
    <bean id="factoryBeanLaptop" class="com.huawei.yinya.xml.LaptopFactoryBeanImpl"/>


</beans>